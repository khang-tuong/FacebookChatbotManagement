

@model FacebookChatbotManagement.Models.ViewModels.PatternCreateViewModel

<div class="modal fade" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4>Tạo pattern</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Tên</label>
                    <input type="text" class="form-control" id="txtName" />
                    <label>Cấu trúc câu</label>
                    <select class="js-example-basic-multiple form-control" name="states[]" multiple="multiple">
                        @foreach(var entity in Model.Entities)
                        {
                            <option value="@entity.Id">@entity.Name</option>
                        }
                    </select>
                    <p></p>
                    <div class="pretty p-default p-curve">
                        <input type="checkbox" id="txtMatchBegin" />
                        <div class="state">
                            <label>Chính xác từ đầu câu</label>
                        </div>
                    </div>
                    <p></p>
                    <div class="pretty p-default p-curve">
                        <input type="checkbox" id="txtMatchEnd" />
                        <div class="state">
                            <label>Chính xác vào cuối câu</label>
                        </div>
                    </div>
                    <p></p>
                    <button class="btn btn-primary" onclick="save()">Lưu</button>
                    <button class="btn btn-danger" data-dismiss="modal">Hủy</button>
                </div>

            </div>

        </div>
    </div>
</div>
<script>
    var modal;
    var select2;

    $(document).ready(() => {
        initSelection2();
        $('.select2-container').css('width', '100%');


        this.modal = $('#myModal').modal();
        this.modal.show();
    })

    function initSelection2() {
        this.select2 = $("select").select2();
        $("select").on("select2:select", function (evt) {
            var element = evt.params.data.element;
            var $element = $(element);

            window.setTimeout(function () {
                if ($("select").find(":selected").length > 1) {
                    var $second = $("select").find(":selected").eq(-2);

                    $element.detach();
                    $second.after($element);
                } else {
                    $element.detach();
                    $("select").prepend($element);
                }

                $("select").trigger("change");
            }, 1);
        });

        $("select").on("select2:unselect", function (evt) {
            if ($("select").find(":selected").length) {
                var element = evt.params.data.element;
                var $element = $(element);
                $
                    ("select").find(":selected").after($element);
            }
        });
    }

    function save() {
        let entities = [];

        /**
         * @@type {[text: string, id: number]}
         */
        let selectedData = this.select2.select2('data');

        for (var i = 0; i < selectedData.length; i++) {
            entities.push(selectedData[i].id);
        }

        let data = {
            entities,
            name: $('#txtName').val(),
            matchBegin: $('#txtMatchBegin').is(':checked'),
            matchEnd: $('#txtMatchEnd').is(':checked'),
        }

        $.ajax({
            url: '@Url.Action("Create", "Pattern")',
            type: 'POST',
            data: data,
            success: (res) => {
                location.reload();
            }
        })
    }
</script>
